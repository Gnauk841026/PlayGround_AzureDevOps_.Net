# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.x'

- script: |
    dotnet restore
  displayName: 'Restore NuGet Packages'

- script: |
    ls
    cd MyWebApp
    ls
    dotnet build
  displayName: 'Build Solution'

- script: |
    ls
    cd MyWebApp
    dotnet run & sleep 10
    lsof -ti:5001 | xargs kill
  displayName: 'Run Web Application'

- script: |
    cd MyWebApp.Tests
    dotnet test
  displayName: 'Run Unit Tests with Coverage'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/TestResults/*.xml'
    failTaskOnFailedTests: true
  displayName: 'Publish Test Results'

- script: |
    dotnet tool install -g dotnet-format
    dotnet-format --check
  displayName: 'Style Check with StyleCop Analyzers'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.cobertura.xml'
  displayName: 'Publish Code Coverage Results'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
  displayName: 'Archive Build Artifacts'

- publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
  artifact: drop
  displayName: 'Publish Artifact'